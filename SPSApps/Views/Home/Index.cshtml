@model SPSApps.Models.Register.HomeDTO

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
<div style="width: 90%; margin: 20px auto">
    <div style="width: 100%; height: 100px">

        <div style="float: left">
            <img style="width:60px" class="profile-img" src="~/img/profile.png" />
        </div>
        <div style="margin-left: 18px; float: left">
            <h5 style="font-weight:bold">@Model.Name</h5>
            <h5>@Model.Email</h5>
        </div>
        <div style="float:right">
            <button type="button" class="btn btn-default btn-sm">
                <a class="glyphicon glyphicon-log-out" asp-controller="Users" asp-action="LogOut">&#160LogOut</a>
            </button>
        </div>
    </div>


    <div style="float:none;">
        <style>
            .wrapper {
                height: 100%;
            }
        </style>

        <div class="wrapper">
            <div style="box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px; background-position:-25px -25px; margin: 0 auto; height: 500px;">
                <div style="width:95%; height:470px; margin: 0 auto;top: 10px" id="map"></div>
            </div>

            <div id="parking" style="display:none; box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px; padding: 3px">
                Apply for booking:
                <br />
                Rate/Hour: 
                <div id="parking-details">

                </div>

                <h6>
                    Welcome to Maplewood Village! Nestled in the heart of the picturesque Green Valley, Maplewood is a vibrant community known for its tree-lined streets, friendly neighbors, and charming local shops. Residents enjoy easy access to the nearby Green Valley Park, perfect for leisurely strolls and family picnics.
                </h6>

                <div class="input-box button" id="request-parking">
                </div>
                <div class="input-box button" id="emergency-parking">
                </div>
            </div>
            <!-- prettier-ignore -->
            <script>
                (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })
                    ({ key: "AIzaSyDYW_g6zWahp8GXuGARpDp7MiMZih6VdU8", v: "weekly" });</script>
            <script>
                let map;

                async function initMap() {

                    const { Map } = await google.maps.importLibrary("maps");

                    // const currentLocation = await getCurrentPosition();
                    map = new Map(document.getElementById("map"), {
                        center: { lat: 23.8799, lng: 90.2727 },
                        zoom: 20,
                    });

                    // marker = new google.maps.Marker({
                    //     position: new google.maps.LatLng(currentLocation.coords.latitude, currentLocation.coords.longitude),
                    //     label: "You",
                    //     map: map
                    // });
                    var locations = @Json.Serialize(Model.Buildings);

                    var infowindow = new google.maps.InfoWindow();

                    var marker, i;

                    console.log(locations)
                    for (i = 0; i < locations.length; i++) {
                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(locations[i].latitude, locations[i].longitude),
                            icon: "https://developers.google.com/maps/documentation/javascript/examples/full/images/parking_lot_maps.png",
                            map: map
                        });

                        google.maps.event.addListener(marker, 'click', (function (marker, i) {
                            return function () {
                               // window.location.href = "/{controller}/{action}/{params}";
                               // infowindow.setContent("asdf");
                              //  infowindow.open(map, marker);
                              debugger
                                var details = document.getElementById("parking-details");
                                var parking = document.getElementById("parking");
                                parking.style.display = 'block';

                                var requestParking = document.getElementById("request-parking");
                                var emergencyParking = document.getElementById("emergency-parking");
                                requestParking.innerHTML = `<button class="button-70"><a href="/Home/Confirm?emergency=${locations[i].id}">Emergency Parking</a></button>`
                                emergencyParking.innerHTML = `<button class="button-71"><a href="/Home/Confirm?request=${locations[i].id}">Parking Request</a></button>`
                                details.innerHTML = locations[i].fairPerParking
                            }
                        })(marker, i));
                    }

                }

               // function getCurrentPosition() {
               //      return new Promise((resolve, reject) => {
               //          navigator.geolocation.getCurrentPosition(
               //              position => resolve(position),
               //              error => reject(error)
               //          )
               //      })
               //  }

                initMap();
            </script>
        </div>
    </div>
</div>

<link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />

<style>
.button-70 {
        display: inline-block;
        outline: 0;
        cursor: pointer;
        padding: 5px 16px;
        font-size: 14px;
        font-weight: 500;
        line-height: 20px;
        vertical-align: middle;
        border: 1px solid;
        border-radius: 6px;
        color: black;
        background-color: #fafbfc;
        border-color: red;
        box-shadow: rgba(27, 31, 35, 0.04) 0px 1px 0px 0px, rgba(255, 255, 255, 0.25) 0px 1px 0px 0px inset;
        transition: 0.2s cubic-bezier(0.3, 0, 0.5, 1);
        transition-property: color, background-color, border-color;
    }

 .button-70:hover {
        color: #ffffff;
        background-color: red;
        border-color: #1b1f2326;
        box-shadow: rgba(27, 31, 35, 0.1) 0px 1px 0px 0px, rgba(255, 255, 255, 0.03) 0px 1px 0px 0px inset;
        transition-duration: 0.1s;
 }

    .button-71 {
        display: inline-block;
        outline: 0;
        cursor: pointer;
        padding: 5px 16px;
        font-size: 14px;
        font-weight: 500;
        line-height: 20px;
        vertical-align: middle;
        border: 1px solid;
        border-radius: 6px;
        color: black;
        background-color: #fafbfc;
        border-color: #0366d6;
        box-shadow: rgba(27, 31, 35, 0.04) 0px 1px 0px 0px, rgba(255, 255, 255, 0.25) 0px 1px 0px 0px inset;
        transition: 0.2s cubic-bezier(0.3, 0, 0.5, 1);
        transition-property: color, background-color, border-color;
    }

        .button-71:hover {
            color: #ffffff;
            background-color: #0366d6;
            border-color: #1b1f2326;
            box-shadow: rgba(27, 31, 35, 0.1) 0px 1px 0px 0px, rgba(255, 255, 255, 0.03) 0px 1px 0px 0px inset;
            transition-duration: 0.1s;
        }
</style>